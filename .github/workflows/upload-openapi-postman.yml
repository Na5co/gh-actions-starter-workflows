name: Upload OpenAPI to Postman
on:
  push:
    branches: [main]
    paths: ['specifications/auto-generated-schema.yaml']
  pull_request:
    branches: [main]
    paths: ['specifications/auto-generated-schema.yaml']
  workflow_dispatch:  # Allow manual trigger

jobs:
  upload-to-postman:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Validate OpenAPI spec exists
        run: |
          if [ ! -f "specifications/auto-generated-schema.yaml" ]; then
            echo "‚ùå OpenAPI spec file not found at specifications/auto-generated-schema.yaml"
            exit 1
          fi
          echo "‚úÖ OpenAPI spec file found"
      
      - name: Upload OpenAPI spec to Postman
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        run: |
          echo "üì§ Uploading OpenAPI spec to Postman..."
          
          response=$(curl -s -X POST "https://api.getpostman.com/specs?workspaceId=88b226d9-ceb3-48bf-aebe-772f90d0b37c" \
            -H "X-API-Key: $POSTMAN_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{
              \"name\": \"Auto Generated API Schema - $(date +%Y-%m-%d_%H-%M)\",
              \"type\": \"OPENAPI:3.0\",
              \"files\": [
                {
                  \"path\": \"index.yaml\",
                  \"content\": $(cat specifications/auto-generated-schema.yaml | jq -Rs .)
                }
              ]
            }")
          
          echo "Response: $response"
          
          # Extract spec ID
          spec_id=$(echo "$response" | jq -r '.id')
          
          if [ "$spec_id" != "null" ] && [ -n "$spec_id" ]; then
            echo "‚úÖ Upload successful - Spec ID: $spec_id"
            echo "Spec will be available for linting shortly..."
          else
            echo "‚ùå Upload failed or no ID returned"
            exit 1
          fi
